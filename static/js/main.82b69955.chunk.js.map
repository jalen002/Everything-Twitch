{"version":3,"sources":["resources/images/fortnite.jpg","resources/images/apex.jpg","resources/images/404-sad-face.png","view/commands/Commands.js","view/stream/Stream.js","charts/FortniteRecentGames.js","charts/ApexSeasonWins.js","view/aboutme/AboutMe.js","view/notfound/NotFound.js","view/main/Main.js","serviceWorker.js","index.js","resources/private/apiKeys.js","resources/images/citi-field.jpg"],"names":["module","exports","createData","command","description","rows","Commands","count","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","Stream","channel","id","theme","muted","onVideoPause","console","log","height","width","Component","FortniteRecentGames","props","state","recentMatchData","labels","datasets","label","backgroundColor","borderColor","data","this","updateChartData","recentMatches","match","x","convertDate","dateCollected","y","kills","setState","date","Date","offset","getTimezoneOffset","setMinutes","getMinutes","options","title","display","text","fontSize","legend","position","scales","xAxes","type","time","unit","displayFormats","hour","ticks","source","ApexSeasonWins","seasonWins","stats","filter","stat","metadata","includes","name","value","yAxes","suggestedMin","proxyUrl","apiKey","apiConfig","epicNickname","originName","AboutMe","error","fortniteStats","apexStats","Promise","all","retrieveFortniteTrackingInfo","retrieveApexTrackingInfo","then","results","endpoint","trackerApi","queryParams","method","headers","axios","get","classes","className","Card","root","CardHeader","avatar","Avatar","alt","src","fortnite","CardMedia","CardContent","Typography","variant","color","component","lifeTimeStats","apex","withStyles","margin","media","paddingTop","NotFound","sadFace","icon","linkTo","Main","selected","event","selectedIndex","CssBaseline","AppBar","appBar","Toolbar","basename","process","Drawer","drawer","paper","drawerPaper","anchor","Divider","dividerColor","List","disablePadding","option","index","MenuItem","Link","to","menuItemRoot","menuItemSelected","onClick","updateSelected","ListItemIcon","style","ListItemText","content","toolbar","exact","path","StreamPage","marginLeft","borderBottom","flexShrink","backgroundImage","citiField","mixins","flexGrow","palette","background","default","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.82b69955.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fortnite.d8436339.jpg\";","module.exports = __webpack_public_path__ + \"static/media/apex.d0d73426.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404-sad-face.64f4e1b7.png\";","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction createData(command, description) {\n  return { command, description };\n}\n\nconst rows = [\n  createData('!date', 'Tells the user what today\\'s date is'),\n  createData('!followed', 'Tells the user when they followed my channel'),\n  createData('!followers', 'Gives the count of current channel followers'),\n  createData('!following', 'Gives the user how long the you\\'ve been following my channel'),\n  createData('!give <username> <number>', 'Allows the user to give another user channel points'),\n  createData('!headset', 'A description of my current gaming headset'),\n  createData('!keyboard', 'A description of my current gaming keyboard'),\n  createData('!mouse', 'A description of my current gaming mouse'),\n  createData('!nextsong', 'Tells the user what the next song in the queue is'),\n  createData('!recentfollowers', 'Tells the 3 most recent followers'),\n  createData('!song', 'Tells user what song is currently playing'),\n  createData('!specs', 'Tells the user what my PC specs are'),\n  createData('!stats', 'Gives stats about stream: Game, title, Uptime, viewers'),\n  createData('!time', 'Gives the current time'),\n  createData('!top5points', 'Top 5 users based on channel points'),\n  createData('!top5time', 'Top 5 users based on hours watched'),\n  createData('!uptime', 'How long the current stream has been live'),\n  createData('!yeet', 'A sound'),\n  createData('!sr <youtube url>', 'Allows users to play a song on stream'),\n  createData('!songrequest <youtube url>', 'Allows users to play a song on stream'),\n  createData('!commands', 'Gives user a link to a website with all the commands listed'),\n  createData('!fk', 'A sound for when Mint Patty dies'),\n  createData('f', 'A sound for when Mint Patty dies'),\n  createData('!win', 'A sound for when Mint Patty wins'),\n  createData('b', 'A sound for when Mint Patty gets a kill'),\n  createData('!kill', 'A sound for when Mint Patty gets a kill')\n];\n\nexport default function Commands() {\n  var count = 0;\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Command</TableCell>\n            <TableCell>Description</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={count++}>\n              <TableCell>{row.command}</TableCell>\n              <TableCell>{row.description}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, { Component } from 'react';\r\nimport { TwitchEmbed } from 'react-twitch-embed';\r\n\r\n\r\nclass Stream extends Component {\r\n\r\n  render (){\r\n    return (\r\n      // Add a placeholder for the Twitch embed\r\n      <div>\r\n        <TwitchEmbed\r\n          channel='mintpatty17'\r\n          id='mintpatty17'\r\n          theme='dark'\r\n          muted\r\n          onVideoPause={() => console.log(':(')}\r\n          height='100vh'\r\n          width='100%'\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stream;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nclass FortniteRecentGames extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          recentMatchData: {\r\n              labels: [],\r\n              datasets: [{\r\n                  label: 'Kills',\r\n                  backgroundColor: 'rgba(115, 210, 255, 0.4)',\r\n                  borderColor: 'rgba(0, 0, 255, 0.4)',\r\n                  data: []\r\n              }]\r\n          }\r\n      };\r\n  }\r\n\r\n  componentWillReceiveProps ({data}){\r\n    this.updateChartData(data);\r\n  }\r\n\r\n  updateChartData(data) {\r\n    var recentMatchData = this.state.recentMatchData;\r\n\r\n    recentMatchData.datasets[0].data = data ? data.recentMatches.map(match => { return { x: this.convertDate(match.dateCollected), y: match.kills } }) : [];\r\n    this.setState({ recentMatchData });\r\n  }\r\n\r\n  convertDate(date) {\r\n      date = new Date(date);\r\n      var offset = new Date().getTimezoneOffset();\r\n      var convertedDate = date.setMinutes(date.getMinutes() - offset);\r\n      return convertedDate;\r\n  }\r\n\r\n\r\n  render() {\r\n    let { recentMatchData } = this.state;\r\n\r\n    return (\r\n      <Line\r\n        data={recentMatchData}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Recent Matches',\r\n            fontSize: 20\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: 'right'\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              type: 'time',\r\n              time: {\r\n                unit: 'hour',\r\n                displayFormats: {\r\n                  hour: 'MMM D h:mm a'\r\n                }\r\n              },\r\n              ticks: {\r\n                source: 'auto'\r\n              }\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FortniteRecentGames;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nclass ApexSeasonWins extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          seasonWins: {\r\n              labels: [],\r\n              datasets: [{\r\n                  label: 'Wins',\r\n                  backgroundColor: 'rgba(179, 12, 0, 0.4)',\r\n                  borderColor: 'rgba(255, 0, 0, 0.4)',\r\n                  data: []\r\n              }]\r\n          }\r\n      };\r\n  }\r\n\r\n  componentWillReceiveProps ({data}){\r\n    this.updateChartData(data);\r\n  }\r\n\r\n  updateChartData(data) {\r\n    var seasonWins = this.state.seasonWins;\r\n\r\n    if(data){\r\n      seasonWins.datasets[0].data = data.stats.filter(stat => { return stat.metadata.key.includes('Wins') }).map(stat => {\r\n        return { x: stat.metadata.name, y: stat.value}\r\n      });\r\n      \r\n      seasonWins.labels = seasonWins.datasets[0].data.map(stat => {\r\n        return stat.x;\r\n      });\r\n      \r\n      this.setState({ seasonWins });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let { seasonWins } = this.state;\r\n\r\n    return (\r\n      <Line\r\n        data={seasonWins}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Wins by Season',\r\n            fontSize: 20\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: 'right'\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                suggestedMin: 0\r\n              }\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApexSeasonWins;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './aboutme.css';\nimport fortnite from '../../resources/images/fortnite.jpg';\nimport apex from '../../resources/images/apex.jpg';\nimport apiConfig from '../../resources/private/apiKeys';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport FortniteRecentGames from '../../charts/FortniteRecentGames';\nimport ApexSeasonWins from '../../charts/ApexSeasonWins';\n\n\n\nlet proxyUrl = 'https://cors-anywhere.herokuapp.com/';\nlet fortniteTrackerUrlBase = 'https://api.fortnitetracker.com/v1/';\nlet apexTrackerUrlBase = 'https://public-api.tracker.gg/apex/v1/';\nlet fortnitePlatform = 'kbm';\nlet apexPlatform = 5; //pc/origin\nlet apiKey = apiConfig.apiKey;\nlet epicNickname = apiConfig.epicNickname;\nlet originName = apiConfig.originName;\n\nconst useStyles = theme => ({\n  root: {\n    width: 590,\n    margin: '30px',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n});\n\n\nclass AboutMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      fortniteStats: null,\n      apexStats: null,\n    }\n  }\n\n  componentDidMount() {\n    Promise.all([ this.retrieveFortniteTrackingInfo('profile/' + fortnitePlatform + '/' + epicNickname),\n                  this.retrieveApexTrackingInfo('standard/profile/'+ apexPlatform + '/' + originName)])\n            .then((results)  => {\n                this.setState({\n                    fortniteStats: results[0].data,\n                    apexStats: results[1].data.data,\n                    error: null\n                });\n            });\n  }\n\n  retrieveFortniteTrackingInfo(endpoint) {\n    let trackerApi = proxyUrl + fortniteTrackerUrlBase + endpoint;\n    let queryParams = {\n      method: 'GET',\n      headers: {\n        'TRN-Api-Key': apiKey\n      }\n    };\n\n    return axios.get(trackerApi, queryParams);\n  }\n\n  retrieveApexTrackingInfo(endpoint) {\n    let trackerApi = proxyUrl + apexTrackerUrlBase + endpoint;\n    let queryParams = {\n      method: 'GET',\n      headers: {\n        'TRN-Api-Key': apiKey\n      }\n    };\n\n    return axios.get(trackerApi, queryParams);\n  }\n\n\n  render() {\n    let { classes } = this.props;\n    let { fortniteStats, apexStats, error } = this.state;\n\n    return (\n      <div>\n        <header className='aboutMeHeader'>\n          Mint Patty 17\n        </header>\n        <div className='aboutMeBody'>\n          <Card className={classes.root}>\n            <CardHeader\n              avatar={\n                <Avatar alt='fortnite' src={fortnite} />\n              }\n              title='Fortnite'\n            />\n            <CardMedia>\n              <FortniteRecentGames data={fortniteStats} />\n            </CardMedia>\n            <CardContent>\n              <Typography variant='body2' color='textSecondary' component='p'>\n                Total Fortnite Wins: {fortniteStats ? fortniteStats.lifeTimeStats[8].value : null}<br />\n                Overall Fortnite K/D: {fortniteStats ? fortniteStats.lifeTimeStats[11].value : null}\n              </Typography>\n            </CardContent>\n          </Card>\n          <Card className={classes.root}>\n            <CardHeader\n              avatar={\n                <Avatar alt='apex' src={apex} />\n              }\n              title='Apex Legends'\n            />\n            <CardMedia>\n              <ApexSeasonWins data={apexStats} />\n            </CardMedia>\n            <CardContent>\n              <Typography variant='body2' color='textSecondary' component='p'>\n                {/* some stats here */}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default withStyles(useStyles)(AboutMe);","import React, { Component } from 'react';\r\nimport './NotFound.css';\r\nimport sadFace from '../../resources/images/404-sad-face.png';\r\n\r\nclass NotFound extends Component {\r\n    \r\n    render (){\r\n        return <div>\r\n            <div className='main-404'>\r\n                <div className='title-404'>\r\n                    404\r\n                </div>\r\n                <img src={sadFace} className='sad-face-logo' alt='Sad Face' />\r\n                <br />\r\n                <div className='body-404'>\r\n                    Oops! That page must've gotten lost in the nethers...<br />\r\n                    Try looking elsewhere padawan.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\nimport './Main.css';\nimport citiField from '../../resources/images/citi-field.jpg';\nimport Commands from '../commands/Commands';\nimport StreamPage from '../stream/Stream';\nimport AboutMe from '../aboutme/AboutMe';\nimport NotFound from '../notfound/NotFound';\n\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    backgroundColor: 'black',\n    borderBottom: '1px solid white',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundImage: 'url(' + citiField + ')'\n  },\n  dividerColor: {\n    backgroundColor: 'white',\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n  },\n  menuItemRoot: {\n    '&$menuItemSelected, &$menuItemSelected:focus, &$menuItemSelected:hover': {\n      backgroundColor: 'rgb(60,60,60)'\n    }\n  },\n  menuItemSelected: {}\n});\n\nconst options = [\n  {\n    text: 'About Me',\n    icon: 'fi-nnsuxx-home',\n    linkTo: '/'\n  },\n  {\n    text: 'Commands',\n    icon: 'fi-cnluxx-pen',\n    linkTo: '/commands'\n  },\n  {\n    text: 'Stream',\n    icon: 'fi-nnsuxx-twitch-glitch',\n    linkTo: '/stream'\n  }\n];\n\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected: 0 };\n  }\n\n  updateSelected(event, selectedIndex) {\n    this.setState({ selected: selectedIndex });\n  }\n\n  render () {\n    const { classes } = this.props;\n\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position='fixed' className={classes.appBar} >\n          <Toolbar />\n        </AppBar>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Drawer\n            className={classes.drawer}\n            variant='permanent'\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            anchor='left'\n          >\n            <span className='Main-name'>Mint Patty 17</span>\n            <Divider className={classes.dividerColor}/>\n            <List disablePadding={true}>\n              {options.map((option, index) => (\n                <MenuItem\n                component={Link} \n                to={option.linkTo}\n                classes={{\n                  root: classes.menuItemRoot,\n                  selected: classes.menuItemSelected\n                }}\n                selected={index === this.state.selected}\n                onClick={event => this.updateSelected(event, index)}\n                >\n                  <ListItemIcon><i className={option.icon} style={{color: 'white'}}/></ListItemIcon>\n                  <ListItemText className='Drawer-text'>{option.text}</ListItemText>\n                </MenuItem>\n              ))}\n              </List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Switch>\n              <Route exact path='/' component={AboutMe} />\n              <Route path='/commands' component={Commands} />\n              <Route path='/stream' component={StreamPage} />\n              <Route component={NotFound} />\n            </Switch>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Main);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './view/main/Main';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\n\r\nmodule.exports = {\r\n    apiKey: '2b19e9ac-9f31-44c5-ac10-02c6127fc63d',\r\n    epicNickname: 'MintPatty17.tv Ψ',\r\n    originName: 'a_LethalMeatball'\r\n}","module.exports = __webpack_public_path__ + \"static/media/citi-field.b16487a2.jpg\";"],"sourceRoot":""}